// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechWave_Electronics.Models;

#nullable disable

namespace TechWave_Electronics.Migrations.TechWaveElectronicsMigrations
{
    [DbContext(typeof(TechWaveElectronics))]
    partial class TechWaveElectronicsModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TechWave_Electronics.Models.Attendance", b =>
                {
                    b.Property<Guid>("AttendanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("AttendanceDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AttendanceID");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Attendance");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categorys");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.Department", b =>
                {
                    b.Property<Guid>("DepartmentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DepartmentsId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DepartmentsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<byte[]>("Employeeurl")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date");

                    b.Property<int?>("Incentive")
                        .HasColumnType("int");

                    b.Property<Guid>("JobID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentsId");

                    b.HasIndex("JobID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.History", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantityChange")
                        .HasColumnType("int");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WarehouseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("itmsItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("warehousesWarehouseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TransactionId");

                    b.HasIndex("itmsItemId");

                    b.HasIndex("warehousesWarehouseId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.ITems", b =>
                {
                    b.Property<Guid>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReoderLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ItemId");

                    b.HasIndex("CategoryID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.Inventory", b =>
                {
                    b.Property<Guid>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("WarehouseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("itmsItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("warehousesWarehouseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InventoryId");

                    b.HasIndex("itmsItemId");

                    b.HasIndex("warehousesWarehouseId");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.Job", b =>
                {
                    b.Property<Guid>("JobiD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("BaseSalary")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("jobName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("JobiD");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.Leave", b =>
                {
                    b.Property<Guid>("LeaveID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LeaveType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("LeaveID");

                    b.HasIndex("EmployeeId");

                    b.ToTable("leaves");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.Payroll", b =>
                {
                    b.Property<Guid>("PayrollID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Allowances")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("BaseSalary")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("Deductions")
                        .HasColumnType("decimal(10,2)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetSalary")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("PayrollID");

                    b.HasIndex("EmployeeId");

                    b.ToTable("payrolls");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.StockIn", b =>
                {
                    b.Property<Guid>("StockInId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("DateReceived")
                        .HasColumnType("date");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TblSupplierSupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WarehouseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("itmsItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("warehousesWarehouseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StockInId");

                    b.HasIndex("TblSupplierSupplierId");

                    b.HasIndex("itmsItemId");

                    b.HasIndex("warehousesWarehouseId");

                    b.ToTable("StockIn");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.StockOut", b =>
                {
                    b.Property<Guid>("StockOutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("DateIssued")
                        .HasColumnType("date");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("WarehouseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("itmsItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("warehousesWarehouseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StockOutId");

                    b.HasIndex("itmsItemId");

                    b.HasIndex("warehousesWarehouseId");

                    b.ToTable("StockOut");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.TblCustomer", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Address")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("City")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ContactTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("CustomerUrl")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Fax")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Region")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerId");

                    b.ToTable("TblCustomers");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.TblOrder", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Freight")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Name")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<DateOnly?>("OrderDate")
                        .HasColumnType("date");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateOnly?>("RequiredDate")
                        .HasColumnType("date");

                    b.Property<string>("ShipVia")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid?>("ShipViaNavigationShipperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("ShippedDate")
                        .HasColumnType("date");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ShipViaNavigationShipperId");

                    b.ToTable("TblOrders");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.TblOrderDetail", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<Guid>("OrderId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId1NavigationOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<float>("Tax")
                        .HasColumnType("real");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("OrderId");

                    b.HasIndex("OrderId1NavigationOrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("TblOrderDetails");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.TblProduct", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Discontinued")
                        .HasColumnType("bit");

                    b.Property<string>("EnglishName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("QuantityPerUnit")
                        .HasColumnType("int");

                    b.Property<int>("ReorderLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("UnitsInStock")
                        .HasColumnType("int");

                    b.Property<int>("UnitsOnOrder")
                        .HasColumnType("int");

                    b.Property<byte[]>("itemImg")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("TblProducts");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.TblShipper", b =>
                {
                    b.Property<Guid>("ShipperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ShipperId");

                    b.ToTable("TblShippers");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.TblSupplier", b =>
                {
                    b.Property<Guid>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SupplierId");

                    b.ToTable("TblSuppliers");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.Warehouses", b =>
                {
                    b.Property<Guid>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WarehouseId");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.Attendance", b =>
                {
                    b.HasOne("TechWave_Electronics.Models.Employee", "Employee")
                        .WithMany("Attendance")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.Employee", b =>
                {
                    b.HasOne("TechWave_Electronics.Models.Department", "Departments")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentsId");

                    b.HasOne("TechWave_Electronics.Models.Job", "Job")
                        .WithMany("Employee")
                        .HasForeignKey("JobID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.History", b =>
                {
                    b.HasOne("TechWave_Electronics.Models.ITems", "itms")
                        .WithMany("History")
                        .HasForeignKey("itmsItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechWave_Electronics.Models.Warehouses", "warehouses")
                        .WithMany("History")
                        .HasForeignKey("warehousesWarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("itms");

                    b.Navigation("warehouses");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.ITems", b =>
                {
                    b.HasOne("TechWave_Electronics.Models.Category", "Category")
                        .WithMany("Tems")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.Inventory", b =>
                {
                    b.HasOne("TechWave_Electronics.Models.ITems", "itms")
                        .WithMany("Inventories")
                        .HasForeignKey("itmsItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechWave_Electronics.Models.Warehouses", "warehouses")
                        .WithMany("Inventories")
                        .HasForeignKey("warehousesWarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("itms");

                    b.Navigation("warehouses");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.Leave", b =>
                {
                    b.HasOne("TechWave_Electronics.Models.Employee", "Employee")
                        .WithMany("Leave")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.Payroll", b =>
                {
                    b.HasOne("TechWave_Electronics.Models.Employee", "Employee")
                        .WithMany("Payroll")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.StockIn", b =>
                {
                    b.HasOne("TechWave_Electronics.Models.TblSupplier", "TblSupplier")
                        .WithMany("StockIn")
                        .HasForeignKey("TblSupplierSupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechWave_Electronics.Models.ITems", "itms")
                        .WithMany("StockIn")
                        .HasForeignKey("itmsItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechWave_Electronics.Models.Warehouses", "warehouses")
                        .WithMany("StockIn")
                        .HasForeignKey("warehousesWarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblSupplier");

                    b.Navigation("itms");

                    b.Navigation("warehouses");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.StockOut", b =>
                {
                    b.HasOne("TechWave_Electronics.Models.ITems", "itms")
                        .WithMany("StockOut")
                        .HasForeignKey("itmsItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechWave_Electronics.Models.Warehouses", "warehouses")
                        .WithMany("StockOut")
                        .HasForeignKey("warehousesWarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("itms");

                    b.Navigation("warehouses");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.TblOrder", b =>
                {
                    b.HasOne("TechWave_Electronics.Models.TblCustomer", "Customer")
                        .WithMany("TblOrders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechWave_Electronics.Models.Employee", "Employee")
                        .WithMany("TblOrders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechWave_Electronics.Models.TblShipper", "ShipViaNavigationShipper")
                        .WithMany("TblOrders")
                        .HasForeignKey("ShipViaNavigationShipperId");

                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("ShipViaNavigationShipper");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.TblOrderDetail", b =>
                {
                    b.HasOne("TechWave_Electronics.Models.TblOrder", "OrderId1Navigation")
                        .WithMany("TblOrderDetails")
                        .HasForeignKey("OrderId1NavigationOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechWave_Electronics.Models.TblProduct", "Product")
                        .WithMany("TblOrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderId1Navigation");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.TblProduct", b =>
                {
                    b.HasOne("TechWave_Electronics.Models.Category", "Category")
                        .WithMany("TblProducts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechWave_Electronics.Models.TblSupplier", "Supplier")
                        .WithMany("TblProducts")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.Category", b =>
                {
                    b.Navigation("TblProducts");

                    b.Navigation("Tems");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.Employee", b =>
                {
                    b.Navigation("Attendance");

                    b.Navigation("Leave");

                    b.Navigation("Payroll");

                    b.Navigation("TblOrders");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.ITems", b =>
                {
                    b.Navigation("History");

                    b.Navigation("Inventories");

                    b.Navigation("StockIn");

                    b.Navigation("StockOut");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.Job", b =>
                {
                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.TblCustomer", b =>
                {
                    b.Navigation("TblOrders");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.TblOrder", b =>
                {
                    b.Navigation("TblOrderDetails");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.TblProduct", b =>
                {
                    b.Navigation("TblOrderDetails");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.TblShipper", b =>
                {
                    b.Navigation("TblOrders");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.TblSupplier", b =>
                {
                    b.Navigation("StockIn");

                    b.Navigation("TblProducts");
                });

            modelBuilder.Entity("TechWave_Electronics.Models.Warehouses", b =>
                {
                    b.Navigation("History");

                    b.Navigation("Inventories");

                    b.Navigation("StockIn");

                    b.Navigation("StockOut");
                });
#pragma warning restore 612, 618
        }
    }
}
